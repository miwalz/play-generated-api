POST	/pet     genapi.controller.PetController.createPet()
GET		/pet     genapi.controller.PetController.getAllPet()
GET     /pet/:id genapi.controller.PetController.getPet(id: String)
PUT		/pet/:id genapi.controller.PetController.updatePet(id: String)
DELETE	/pet/:id genapi.controller.PetController.deletePet(id: String)
POST    /pet/:petId/colors/:colorsId genapi.controller.PetController.addToColors(petId: String, colorsId: String)
DELETE	/pet/:petId/colors/:colorsId genapi.controller.PetController.removeFromColors(petId: String, colorsId: String)
POST    /pet/:petId/colorsEmb/:colorsEmbId genapi.controller.PetController.addToColorsEmb(petId: String, colorsEmbId: String)
DELETE	/pet/:petId/colorsEmb/:colorsEmbId genapi.controller.PetController.removeFromColorsEmb(petId: String, colorsEmbId: String)

POST	/color     genapi.controller.ColorController.createColor()
GET		/color     genapi.controller.ColorController.getAllColor()
GET     /color/:id genapi.controller.ColorController.getColor(id: String)
PUT		/color/:id genapi.controller.ColorController.updateColor(id: String)
DELETE	/color/:id genapi.controller.ColorController.deleteColor(id: String)

POST	/test     genapi.controller.TestController.createTest()
GET		/test     genapi.controller.TestController.getAllTest()
GET     /test/:id genapi.controller.TestController.getTest(id: String)
PUT		/test/:id genapi.controller.TestController.updateTest(id: String)
DELETE	/test/:id genapi.controller.TestController.deleteTest(id: String)

GET		/assets/*file controllers.Assets.versioned(path="/public", file: Asset)
